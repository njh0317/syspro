- main()
맨 처음에 게임이 시작되는 화면을 띄운다.
3초 있다가 게임실행 화면으로 넘어간다

- init_field()
bad item과 good item이 떨어지는 천장을 출력한다

- init_game()
게임의 기본적인 초기화 작업을 수행한다
max_good_item과 max_bad_item 은 각 스테이지에서 최대로 얻을 수 있는 아이템의 개수이다
아이템의 좌표는 랜덤하게 얻는다.
게임캐릭터의 초기 위치 값을 정해준다.

- print_bad_item()
아이템을 하늘에서 떨어지도록 출력하는 함수이다

아이템이 땅에 떨어졌을 경우에는 캐릭터가 그 아이템을 피했다는 뜻이므로 
기존 위치의 폭탄은 삭제해주고 피한 폭탄의 숫자를 하나 늘려준다.
현재 상황을 알려주는 부분을 출력한다. (스테이지 수, 피한 폭탄 개수, 얻은 생명 개수)
만약 max_good_item이 count_bad_item과 같으면 스테이지를 클리어 했다는 의미이므로
다음 스테이지로 넘어간다. - endGame(CLEAR)
만약 max_good_item이 count_bad_item보다 크면 떨어진 폭탄 수가 아직 최대 개수에 다다르지 않았으므로 폭탄을 다시 위에서 내리게 한다.

아이템이 아직 땅에 떨어지지 않은 경우에는 기존위치의 폭탄을 삭제하고 새로운 위치에 폭탄을 출력한다.

- print_good_item()
print_bad_item()과 같은 방법으로 생명을 하늘에서 떨어지도록 출력한다.

- check_bad_hit()
이 함수는 캐릭터가 폭탄에 맞았는지 확인하는 함수이다
사용자의 열과 행이 모두 폭탄의 열과 행에 일치하면, 폭탄에 맞았다는 뜻이므로 생명을 하나 줄인다. 
만약 생명이 0이 되면 게임이 끝나므로 endGame(DEAD)함수로 이동한다.

- check_good_hit()
이 함수는 캐릭터가 생명에 맞았는지 확인하는 함수이다.
사용자의 열과 행이 모두 생명의 열과 행에 일치하면, 생명을 얻었다는 의미이므로 생명을 하나 늘린다.

- game_clear()
스테이지 10까지 끝내면 게임을 클리어한 것이다.
화면을 clear하고 게임이 끝났다는 문구를 출력한다

- endGame()
flag == DEAD이면 사용자는 죽은 것이고 DEAD가 아닐 시에는 사용자가 스테이지를 클리어한것이다.

죽었을 때에는 화면을 clear하고 게임오버 화면을 출력한다. 이때 close_keyboard()함수를 통해서 좌우로 움직이기 위해서 꺼둔 키보드 모드를 다시 원래대로 돌려준다.

스테이지를 클리어했을 때에는 화면을 clear하고 스테이지 클리어 했다는 화면을 출력한다.
다음 스테이지로 넘어가야하니까 다시 맵을 출력하고, 스테이지 변수는 증가하고 게임을 초기화한다. 스테이지가 올라가면 갈수록 난이도를 높이기 위해서 내리는 폭탄의 개수를 늘리고 게임의 스피드는 usleep()을 이용하여 더 빠르게 하였다.

- start_game()
init_keyboard()함수를 통해서 키보드 모드를 꺼주고 키보드 j, l 입력에 따라서 좌우로 움직이게 한다.
만약 input이 j이면 캐릭터는 왼쪽으로 움직이도록 하고, input이 l이면 오른쪽으로 움직이도록 한다.
input에 아무것도 들어오지 않으면 그때 print_bad_item()과 print_good_item() 을 통해 폭탄과 생명이 무작위로 내려오도록 한다.
그리고 check_bad_hit()와 check_good_hit()를 통해 폭탄이나 생명에 맞았는지 확인한다

- init_keyboard()
tcgetattr()를 통해서, 현재 터미널 드라이버의 모드를 initial_settings에 저장해두고, new_settings에 바꿀 터미널 드라이버 모드를 저장한다. 이때는 캐너니컬 모드와 에코모드를 꺼줘야한다. 키보드를 입력받으면 그 입력받은 문자를 출력하는 것이 아니라 캐릭터를 좌우로 움직이게 해야하기 때문이다.
설정을 new_settings에 다 저장하고 나면, 현재 터미널 드라이버 모드를 new_settings로 바꿔준다.

- close_keyboard()
터미널 드라이버 모드를 tcsetattr()을 통해 원래 모드로 다시 바꿔준다.
init_keyboard()에서 저장해둔 initial_settings에 원래 모드의 특성들이 저장되어있다.
































